version: '3'
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmquser
      - RABBITMQ_DEFAULT_PASS=DEBmbwkSrzy9D1T9cJfa
      
#  sqlserver:
#    image: microsoft/mssql-server-linux:latest
#    container_name: sqlserver
#    volumes:
#      - sqlserverdata:/var/opt/mssql
#    ports:
#      - "1434:1433"
#    environment:
#      - ACCEPT_EULA=Y
#      - MSSQL_PID=Developer
#      - SA_PASSWORD=8jkGh47hnDw89Haq8LN2

  mongo:
    image: mongo
    ports:
    - "27017:27017"
#    volumes:
#    - mongodata:/data/db

  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'hospital'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - mysqldata:/var/lib/mysql

  logserver:
    image: datalust/seq:latest
    container_name: logserver
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y

  patientaccountapi:
    image: solutionarchitectureassignment/patientaccountapi:latest
    build: ./PatientAccountAPI
#    depends_on:
#      - rabbitmq
#      - mongo
    links:
      - mongo
    ports:
      - "8000:8000"

  doctoraccountapi:
    image: solutionarchitectureassignment/doctoraccountapi:latest
    build: ./DoctorAccountAPI
#    depends_on:
#      - rabbitmq
#      - mongo
    links:
      - mongo
    ports:
      - "8060:8060"

  hospitaleventstore:
    image: solutionarchitectureassignment/hospitaleventhandler:latest
    build: ./HospitalEventHandler
    links:
      - mongo
      - rabbitmq
      - mysql
    ports:
      - "8010:8010"

  notificationservice:
    image: solutionarchitectureassignment/notificationservice:latest
    build: ./NotificationService
    links:
      - rabbitmq
    ports:
      - "8050:8050"

  timeservice:
    image: solutionarchitectureassignment/timeservice:latest
    build: TimeService
    container_name: timeservice
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

volumes:
  mysqldata:
    external: true
  rabbitmqdata:
    external: true
#  mongodata:
#    external: true
